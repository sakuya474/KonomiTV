
name: Publish Docker Image

# 手動実行のみ（Docker イメージビルドを無効化）
on:
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/konomitv

# ジョブの定義
jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    # 最新コミットがリリースコミットのときは、タグの push がトリガーのとき以外は実行しない
    ## タグが push された後でないと Releases からサードパーティーライブラリをダウンロードできず失敗する
    if: (startsWith(github.ref, 'refs/tags/v')) || (contains(github.event.head_commit.message, 'Release:') == false)
    permissions:
      contents: read
      packages: write
    steps:

      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      # タグの push がトリガーのときだけ、Release のサードパーティーライブラリが確実にアップロードされるまで1分ほど待つ
      - name: Wait for Release to be Created
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          sleep 60s

      # GitHub Container Registry (ghcr.io) にログイン
      - name: Login to the Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Docker イメージのタグ付け用のメタデータを抽出
      - name: Extract Metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=ref,event=tag

      # Docker イメージをビルドして公開
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false

      # おそらく使われることのない、Untagged なイメージをすべて削除する
      # ref: https://github.com/vlaurin/action-ghcr-prune
      # シークレットが設定されていない場合はスキップ
      - name: Prune Untagged Docker Images
        if: ${{ secrets.DELETE_GHCR_IMAGES_TOKEN != '' }}
        uses: vlaurin/action-ghcr-prune@v0.6.0
        with:
          token: ${{ secrets.DELETE_GHCR_IMAGES_TOKEN }}
          container: konomitv
          dry-run: false
          prune-untagged: true
