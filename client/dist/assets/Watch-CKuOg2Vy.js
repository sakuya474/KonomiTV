import{d as n,m as a,U as p,u as l,_ as m,k as h,r as c,o as d}from"./index-DS_2-Bsy.js";import{W as u,P as _}from"./PlayerController-BQ4HROEK.js";import{u as f}from"./ChannelsStore-D8D6tUne.js";import{u as y}from"./symbol-BcwmQNQc.js";import"./VSpacer-BqTa9NBq.js";import"./MediaSessionManager-KwbClO0M.js";import"./VCard-QWdQZIpi.js";import"./VAvatar-zMpO82Y-.js";import"./transition-CWVlLJeb.js";import"./VRow-C8AAkkrO.js";import"./VDialog-Cn4NKVvq.js";import"./VOverlay-BFguG_XP.js";import"./forwardRefs-DboJVnh3.js";import"./dialog-transition-Bmgfe9XH.js";import"./PlayerUtils-D6ABkBVB.js";import"./VSwitch-Dgzv88TL.js";import"./index-PFeXWTa2.js";import"./VTextField-BPqEp0ii.js";import"./VSelectionControl-BWOmVv6G.js";import"./VSlider-C18BS-Vk.js";import"./swiper-Dqdnxiic.js";import"./index-COSjsvFF.js";import"./CommentMuteSettings-n0d7VyJ3.js";import"./VSelect-onFQmNms.js";import"./ssrBoot-CpOtddBR.js";import"./VDivider-BC7IKySd.js";import"./VChip-DDnvDwBV.js";import"./vuedraggable.umd-B1UkltwC.js";import"./Twitter-C-GrEdvW.js";import"./CaptureManager-NuuwDcZT.js";import"./Captures-BtNPLKmD.js";import"./Videos-DBF5P-N8.js";let e=null;const S=n({name:"TV-Watch",components:{Watch:u},data(){return{interval_ids:[]}},computed:{...a(f,y,l)},created(){this.channelsStore.display_channel_id=this.$route.params.display_channel_id,this.init()},beforeRouteUpdate(t,o,r){const i=this.destroy();this.channelsStore.display_channel_id=t.params.display_channel_id,(async()=>this.playerStore.is_zapping===!0?(this.playerStore.is_zapping=!1,this.interval_ids.push(window.setTimeout(()=>{i.then(()=>this.init())},.5*1e3))):i.then(()=>this.init()))(),r()},beforeUnmount(){this.destroy(),this.channelsStore.display_channel_id="gr000"},methods:{async init(){const t=60-new Date().getSeconds();if(this.interval_ids.push(window.setTimeout(()=>{this.channelsStore.update(!0),this.interval_ids.push(window.setInterval(()=>{this.channelsStore.update(!0)},30*1e3))},t*1e3)),await this.channelsStore.update(),this.$route.params.display_channel_id===void 0){this.$router.push({path:"/not-found/"});return}if(this.channelsStore.channel.current.name==="チャンネル情報取得エラー"){await p.sleep(3),this.$router.push({path:"/not-found/"});return}e=new _("Live"),await e.init()},async destroy(){for(const t of this.interval_ids)window.clearInterval(t);this.interval_ids=[],e!==null&&(await e.destroy(),e=null)}}});function w(t,o,r,i,v,$){const s=c("Watch",!0);return d(),h(s,{playback_mode:"Live"})}const tt=m(S,[["render",w]]);export{tt as default};
