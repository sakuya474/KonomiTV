var d=Object.defineProperty;var p=(s,e,r)=>e in s?d(s,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):s[e]=r;var i=(s,e,r)=>p(s,typeof e!="symbol"?e+"":e,r);import{A as n,cN as u,M as a,U as f}from"./index-CjBKWWNU.js";class m{constructor(e){i(this,"max");i(this,"current",0);i(this,"queue",[]);this.max=Math.max(1,Math.floor(e))}async acquire(){if(this.current<this.max){this.current+=1;return}await new Promise(e=>{this.queue.push(()=>{this.current+=1,e()})})}release(){this.current=Math.max(0,this.current-1);const e=this.queue.shift();e!==void 0&&e()}}const c=class c{static async fetchCaptures(){const e=await n.get("/captures");return e.type==="success"?(e.data.forEach(r=>{r.url=`/api${r.url}`}),e.data):null}static async uploadCapture(e,r){for(;;){const h=new FormData;h.append("image",e,r),await this.semaphore.acquire();let t;try{t=await n.post("/captures",h,{headers:{"Content-Type":"multipart/form-data"},timeout:60*1e3})}finally{this.semaphore.release()}if(t.type!=="error")return;switch(t.data.detail){case"Permission denied to save the file":{a.error("キャプチャのアップロードに失敗しました。保存先フォルダに書き込み権限がありません。");return}case"No space left on the device":{a.error("キャプチャのアップロードに失敗しました。保存先フォルダに空き容量がありません。");return}case"Unexpected error occurred while saving the file":{a.error("キャプチャのアップロードに失敗しました。保存中に予期しないエラーが発生しました。");return}default:if(Number.isNaN(t.status)){const o=1+Math.random()*15;t.error.code===u.ECONNABORTED?a.warning(`キャプチャのアップロード中にサーバーへの接続が切断されました。${o.toFixed(2)} 秒後にリトライします。`):t.error.code===u.ETIMEDOUT?a.warning(`キャプチャのアップロード中にサーバーへの接続がタイムアウトしました。${o.toFixed(2)} 秒後にリトライします。`):t.error.code===u.ERR_NETWORK?a.warning(`キャプチャのアップロード中に予期しないネットワークエラーが発生しました。${o.toFixed(2)} 秒後にリトライします。`):a.warning(`キャプチャのアップロードに失敗しました。${o.toFixed(2)} 秒後にリトライします。`),await f.sleep(o);continue}else{n.showGenericError(t,"キャプチャのアップロードに失敗しました。");return}}}}static async deleteCapture(e){const r=await n.delete(`/captures/${e}`);return r.type==="error"?(n.showGenericError(r,"キャプチャの削除に失敗しました。"),!1):!0}};i(c,"MAX_CONCURRENT_UPLOADS",5),i(c,"semaphore",new m(c.MAX_CONCURRENT_UPLOADS));let l=c;export{l as C};
